
#Recoding the whole game (v0.05)

import random
import os

class Domino:

    # A List of Domino Objects that is generated by a function below
    Tile = [ ]  

    def __init__(self, Left, Right, Assigned, TurnPlayed):
        self.Left = Left
        self.Right = Right
        self.Assigned = Assigned
        self.TurnPlayed = TurnPlayed

    
    def GenerateTiles():

        # I dont understand below 100%
        # But for some reason i was able to simplify the code

        # Went to pen and paper and got a beter understanding 
        # Coding is Fucking Amazing

        for i in range(0,7):
            for k in range(i,7):
                Domino.Tile.append(Domino(i,k,0,0 ))

    def DisplayTile(x):


        print(' | ' + str(Domino.Tile[x].Left) + ' | ' + str(Domino.Tile[x].Right) + ' | ')

    def DisplayPlayerTiles(who):

        print( "Tiles Assigned To " + Player.Who[who].Name)
        print( "" )

        for i in range(28):
            if Domino.Tile[i].Assigned == who:
                print(f" {i}  ")
                Domino.DisplayTile(i)

    def AssignTiles():
        
        # Loops are crazy powerful and fun

        for i in range(1,5):
            while Player.Who[i].TilesAssigned < 7:
                RandTile = random.randint(0,27)
                if Domino.Tile[RandTile].Assigned == 0:
                    Domino.Tile[RandTile].Assigned = i
                    Player.Who[i].TilesAssigned += 1

        

class Player:

    Who = [ None ] # I dont want a Player 0 so i initialize Who[0] = None

    def __init__(self, Name, TilesAssigned):
        self.Name = Name
        self.TilesAssigned = TilesAssigned


class Game:

# Note!! "=" is an assignment operator and "==" is a comparison operator

    WhosTurn = 0
    Winner = False

    Board = [ ]
    BoardLeft = 0
    BoardRight = 0

    def FirstToPlay():  # This function is only for the round where the person who has | 6 I 6 | plays first

        Game.WhosTurn = Domino.Tile[27].Assigned
        print( Player.Who[Game.WhosTurn].Name + " Played | 6 I 6 |")
        Domino.Tile[27].Assigned = 0
        Player.Who[Game.WhosTurn].TilesAssigned -= 1
        print("")

        Game.Board.insert(0, f"| {Domino.Tile[27].Left} I {Domino.Tile[27].Right} |" )
        Game.BoardLeft = 6
        Game.BoardRight = 6
        Game.DisplayBoard()

        print("")
        Game.PlayGame()

        #input('Insert Any Character to Continue')
        #os.system('cls')


    def WhoPlays(who):
        
        print( f" It is {Player.Who[who].Name}'s to Play ")
        print()
        Domino.DisplayPlayerTiles(who)
        
        TileToPlay = input("Insert Tile Number To Play: ")

        # For now we just enter a blank space to pass or simply hit enter
        if TileToPlay.isspace() or len(TileToPlay) == 0:
            print( f" {Player.Who[Game.WhosTurn].Name} Has Passed")
            Game.PlayGame()

        if TileToPlay.isalpha():
            print(" Can only use numbers ")    
            TileToPlay = input("Insert Tile Number To Play: ")
            
        Game.SetTile(int(TileToPlay))
        Game.DisplayBoard()
        
        

    def DisplayBoard():

        print( "  ----------------------------------------------------------------------------------------------------------------------------------------------------------------")
        print( " ")
        print(' '.join(Game.Board).center(160, " "))
        print( " ")
        print( "  ----------------------------------------------------------------------------------------------------------------------------------------------------------------")

    def SetTile(which):

        # Here i use either .insert to place a Tile on the left side of the row
        # Or .append to place the Tile on the right side of the row

       # if int(which).isalpha():
        #    print(" Can Only Use Numbers ")

        

        while Domino.Tile[which].Assigned != 0:

            # Left Domino Side = Left Board Side. we swap the Domino side around when we place it
            if Domino.Tile[which].Left == Game.BoardLeft:
                Game.Board.insert(0, f"| {Domino.Tile[which].Right} I {Domino.Tile[which].Left} |" )
                Game.BoardLeft = Domino.Tile[which].Right
                Domino.Tile[which].Assigned = 0
                Player.Who[Game.WhosTurn].TilesAssigned -= 1
                break

            # Left Domino Side = Right Board Side. Place Tile as is to the Right Side
            if Domino.Tile[which].Left == Game.BoardRight:
                Game.Board.append( f"| {Domino.Tile[which].Left} I {Domino.Tile[which].Right} |" )
                Game.BoardRight = Domino.Tile[which].Right
                Domino.Tile[which].Assigned = 0
                Player.Who[Game.WhosTurn].TilesAssigned -= 1
                break

            # Left Domino Side = to Both Board Sides. For now i will .append the Tile (Right Side)
            if Domino.Tile[which].Left == Game.BoardLeft and Game.BoardRight:
                Game.Board.append( f"| {Domino.Tile[which].Left} I {Domino.Tile[which].Right} |" )
                Game.BoardRight = Domino.Tile[which].Right
                Domino.Tile[which].Assigned = 0
                Player.Who[Game.WhosTurn].TilesAssigned -= 1
                break

            # Right Domino Side = Left Board Side. Place Tile As is to the Left Side
            if Domino.Tile[which].Right == Game.BoardLeft:
                Game.Board.insert(0, f"| {Domino.Tile[which].Left} I {Domino.Tile[which].Right} |" )
                Game.BoardLeft = Domino.Tile[which].Left
                Domino.Tile[which].Assigned = 0
                Player.Who[Game.WhosTurn].TilesAssigned -= 1
                break

            # Right Domino Side = Right Board Side, Swap Domino around and place on right side
            if Domino.Tile[which].Right == Game.BoardRight:
                Game.Board.append( f"| {Domino.Tile[which].Right} I {Domino.Tile[which].Left} |" )
                Game.BoardRight = Domino.Tile[which].Left
                Domino.Tile[which].Assigned = 0
                Player.Who[Game.WhosTurn].TilesAssigned -= 1
                break

            # Right Domino Side = Both Board Sides, append to the right side as is
            if Domino.Tile[which].Right == Game.BoardLeft and Game.BoardRight:
                Game.Board.append( f"| {Domino.Tile[which].Right} I {Domino.Tile[which].Left} |" )
                Game.BoardRight = Domino.Tile[which].Left
                Domino.Tile[which].Assigned = 0
                Player.Who[Game.WhosTurn].TilesAssigned -= 1
                break

            else:

                print(" Cannot Play That Tile. Your Turn Will be Skipped")
                Game.PlayGame()

    def PlayGame():
        
        while Game.Winner == False:

            Game.WinCondition()
            Game.NextTurn(Game.WhosTurn)
            Game.WhoPlays(Game.WhosTurn)

        print(" GAME OVER ")

    def NextTurn(x):

        if 0 < x < 4:
            Game.WhosTurn += 1
        else:
            Game.WhosTurn = 1

    def WinCondition():

        if Player.Who[1].TilesAssigned == 0 \
        or Player.Who[2].TilesAssigned == 0 \
        or Player.Who[3].TilesAssigned == 0 \
        or Player.Who[4].TilesAssigned == 0:

            Game.Winner = True
            print(" GAME OVER ")

#### D E B U G  S P A C E #####


#### M A I N  ####

# I forgot to add brackets to a funtion call below at first
# Couldnt figure out why the code wasnt working for like a solid 30mins
# Coding can be stressful

Domino.GenerateTiles()


Player.Who.append(Player("Kalm", 0))
Player.Who.append(Player("Claire", 0))
Player.Who.append(Player("Akasha", 0))
Player.Who.append(Player("Shiva", 0))

Domino.AssignTiles()

Game.FirstToPlay()

